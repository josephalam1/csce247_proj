10/27/21:

Commit 1 - Joseph Alam - 12:02am :
- Pushed local changes to avoid merge conflict, don't remember what the changes were

Commit 2 - Joseph Alam - 12:51am :
- Changed User class to interface, removed attributes (just learned interfaces cannot have 
   attributes, only methods), added deleteUser function to all User classes to add for moderator 
   to delete later

Commit 3 - Joseph Alam - 2:14am :
- Added Applications.java - handles creating a list of application objects to interact with for use 
   for other classes
- Changed Application.java:
  Removed:
    private String pastWorkName;
    private String pastJobTitle;
    private ArrayList<String> pastJobDuties;
    private int pastWorkStrtDate;
    private int pastWorkEndDate;
  As there were already in the Experiences.java class

  Added:
    - id: UUID
    - studentId: UUID
    - jobPostingId: UUID
    - applicationDate: Date
    - coverLetter: String
    - accepted: boolean
    - getApplicationDate(): Date
    - getStudentId(): UUID
    - getJobId(): UUID
    - getAccepted(): boolean
    - setCoverLetter(String coverLetter): void
   For making connections from applications object to other objects

- Changed Company.java:
  Because of the changes in Application.java, the sort method for Company had to be changed. Changed to now compare
  by applicationDate instead of pastJobTitle

Commit 4 - Joseph Alam - 6:08am :

  -Changed Company.java
    Moved chooseCandidate() to JobListing.java - seemed like it would make more sense to have it for the
    individual job listing instead of the company.
    -changed to    + chooseCandidate(UUID applicationId) : boolean 
    Will choose a candidate based on the ID of their application and return a boolean of whether or not it was 
    successfully added
  -Changed JobListing.java
    Removed + applicants : ArrayList<Application> from class
      Instead of using this attribute, the applications can be got by the following code:
        Applications applicationsList = Applications.getInstance();
        ArrayList<Application> applicants = applicationsList.getOpenApplicationsByJob(id);
       Where id is the UUID of the job posting
      This way the list of applications will always be automatically updated while the program is running


Commit 5 - Joseph Alam - 7:08 AM
  -Added addApplication(Application application) : boolean to Applications.java
    Method for adding applications to list of applications
  -Changed Experience.java 
    Changed jobStartDate, jobEndDate to Date format
  - Changed Resume.java
    Finished method for + addExperiences() : void
  - Added References.java
    Class for helping format resume similar to Experiences.java

  Commit 6 - Joseph Alam - 10:00 AM
    -Added Resumes.json for a list of Resumes
    